
AMRC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000009c4  00000a38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000a74  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ad0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a83  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e3  00000000  00000000  000015eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b3  00000000  00000000  00001dce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c4  00000000  00000000  00002184  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000418  00000000  00000000  00002248  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002ee  00000000  00000000  00002660  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000294e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	63 64       	ori	r22, 0x43	; 67
  6a:	69 6e       	ori	r22, 0xE9	; 233
  6c:	6f 70       	andi	r22, 0x0F	; 15
  6e:	73 75       	andi	r23, 0x53	; 83
  70:	78 58       	subi	r23, 0x88	; 136
  72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	11 e0       	ldi	r17, 0x01	; 1
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b1 e0       	ldi	r27, 0x01	; 1
  86:	e4 ec       	ldi	r30, 0xC4	; 196
  88:	f9 e0       	ldi	r31, 0x09	; 9
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	ac 33       	cpi	r26, 0x3C	; 60
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	ac e3       	ldi	r26, 0x3C	; 60
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
  9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
  a0:	ac 33       	cpi	r26, 0x3C	; 60
  a2:	b2 07       	cpc	r27, r18
  a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
  a6:	0e 94 0f 01 	call	0x21e	; 0x21e <main>
  aa:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <_exit>

000000ae <__bad_interrupt>:
  ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <uart_init>:

int pwm1 = 0, pwm2 = 0;

void uart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
  b2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
  b6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
  ba:	88 e1       	ldi	r24, 0x18	; 24
  bc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	// Set frame format: 8 data bits, 1 stop bit
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);
  c0:	86 e0       	ldi	r24, 0x06	; 6
  c2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  c6:	08 95       	ret

000000c8 <uart_receive>:
}

unsigned char uart_receive(void) {
	// Wait for data to be received
	while (!(UCSR0A & (1<<RXC0)));
  c8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  cc:	88 23       	and	r24, r24
  ce:	e4 f7       	brge	.-8      	; 0xc8 <uart_receive>
	// Get and return received data from buffer
	return UDR0;
  d0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  d4:	08 95       	ret

000000d6 <uart_print>:

void uart_print(char* str) {
  d6:	fc 01       	movw	r30, r24
	while (*str) {
  d8:	07 c0       	rjmp	.+14     	; 0xe8 <uart_print+0x12>
		while (!(UCSR0A & (1<<UDRE0)));
  da:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  de:	95 ff       	sbrs	r25, 5
  e0:	fc cf       	rjmp	.-8      	; 0xda <uart_print+0x4>
		UDR0 = *str++;
  e2:	31 96       	adiw	r30, 0x01	; 1
  e4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	// Get and return received data from buffer
	return UDR0;
}

void uart_print(char* str) {
	while (*str) {
  e8:	80 81       	ld	r24, Z
  ea:	81 11       	cpse	r24, r1
  ec:	f6 cf       	rjmp	.-20     	; 0xda <uart_print+0x4>
		while (!(UCSR0A & (1<<UDRE0)));
		UDR0 = *str++;
	}
}
  ee:	08 95       	ret

000000f0 <uart_print_int>:

void uart_print_int(int value) {
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
  f8:	2a 97       	sbiw	r28, 0x0a	; 10
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	f8 94       	cli
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0f be       	out	0x3f, r0	; 63
 102:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 104:	4a e0       	ldi	r20, 0x0A	; 10
 106:	be 01       	movw	r22, r28
 108:	6f 5f       	subi	r22, 0xFF	; 255
 10a:	7f 4f       	sbci	r23, 0xFF	; 255
 10c:	0e 94 40 01 	call	0x280	; 0x280 <__itoa_ncheck>
	char buffer[10];
	itoa(value, buffer, 10);
	uart_print(buffer);
 110:	ce 01       	movw	r24, r28
 112:	01 96       	adiw	r24, 0x01	; 1
 114:	0e 94 6b 00 	call	0xd6	; 0xd6 <uart_print>
}
 118:	2a 96       	adiw	r28, 0x0a	; 10
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	f8 94       	cli
 11e:	de bf       	out	0x3e, r29	; 62
 120:	0f be       	out	0x3f, r0	; 63
 122:	cd bf       	out	0x3d, r28	; 61
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	08 95       	ret

0000012a <pwm_init>:
	}
}

void pwm_init() {
	// Set PWM pins as output
	DDRD |= (1<<MOTOR1_PWM) | (1<<MOTOR2_PWM);
 12a:	8a b1       	in	r24, 0x0a	; 10
 12c:	80 66       	ori	r24, 0x60	; 96
 12e:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1<<MOTOR1_DIR) | (1<<MOTOR2_DIR);
 130:	8a b1       	in	r24, 0x0a	; 10
 132:	8c 60       	ori	r24, 0x0C	; 12
 134:	8a b9       	out	0x0a, r24	; 10

	// Set Fast PWM mode, non-inverted for Timer0
	TCCR0A = (1<<WGM00) | (1<<WGM01) | (1<<COM0A1) | (1<<COM0B1);
 136:	83 ea       	ldi	r24, 0xA3	; 163
 138:	84 bd       	out	0x24, r24	; 36
	// Set prescaler to 64 and start PWM for Timer0
	TCCR0B = (1<<CS01) | (1<<CS00);
 13a:	83 e0       	ldi	r24, 0x03	; 3
 13c:	85 bd       	out	0x25, r24	; 37

	// Set Fast PWM mode, non-inverted for Timer1
	TCCR1A = (1<<WGM10) | (1<<COM1A1) | (1<<COM1B1);
 13e:	81 ea       	ldi	r24, 0xA1	; 161
 140:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (1<<WGM12) | (1<<CS11) | (1<<CS10); // Prescaler 64
 144:	8b e0       	ldi	r24, 0x0B	; 11
 146:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 14a:	08 95       	ret

0000014c <set_motor_speed>:
}

void set_motor_speed(int motor, int speed) {
	if (motor == 1) {
 14c:	81 30       	cpi	r24, 0x01	; 1
 14e:	91 05       	cpc	r25, r1
 150:	69 f4       	brne	.+26     	; 0x16c <set_motor_speed+0x20>
		if (speed >= 0) {
 152:	77 23       	and	r23, r23
 154:	2c f0       	brlt	.+10     	; 0x160 <set_motor_speed+0x14>
			PORTD &= ~(1<<MOTOR1_DIR); // Set direction to forward
 156:	8b b1       	in	r24, 0x0b	; 11
 158:	8b 7f       	andi	r24, 0xFB	; 251
 15a:	8b b9       	out	0x0b, r24	; 11
			OCR0A = speed; // Set PWM duty cycle
 15c:	67 bd       	out	0x27, r22	; 39
 15e:	08 95       	ret
			} else {
			PORTD |= (1<<MOTOR1_DIR); // Set direction to backward
 160:	8b b1       	in	r24, 0x0b	; 11
 162:	84 60       	ori	r24, 0x04	; 4
 164:	8b b9       	out	0x0b, r24	; 11
			OCR0A = -speed; // Set PWM duty cycle
 166:	61 95       	neg	r22
 168:	67 bd       	out	0x27, r22	; 39
 16a:	08 95       	ret
		}
		} else if (motor == 2) {
 16c:	02 97       	sbiw	r24, 0x02	; 2
 16e:	61 f4       	brne	.+24     	; 0x188 <set_motor_speed+0x3c>
		if (speed >= 0) {
 170:	77 23       	and	r23, r23
 172:	2c f0       	brlt	.+10     	; 0x17e <set_motor_speed+0x32>
			PORTD &= ~(1<<MOTOR2_DIR); // Set direction to forward
 174:	8b b1       	in	r24, 0x0b	; 11
 176:	87 7f       	andi	r24, 0xF7	; 247
 178:	8b b9       	out	0x0b, r24	; 11
			OCR0B = speed; // Set PWM duty cycle
 17a:	68 bd       	out	0x28, r22	; 40
 17c:	08 95       	ret
			} else {
			PORTD |= (1<<MOTOR2_DIR); // Set direction to backward
 17e:	8b b1       	in	r24, 0x0b	; 11
 180:	88 60       	ori	r24, 0x08	; 8
 182:	8b b9       	out	0x0b, r24	; 11
			OCR0B = -speed; // Set PWM duty cycle
 184:	61 95       	neg	r22
 186:	68 bd       	out	0x28, r22	; 40
 188:	08 95       	ret

0000018a <parse_and_set_speeds>:
	char buffer[10];
	itoa(value, buffer, 10);
	uart_print(buffer);
}

void parse_and_set_speeds(char* input) {
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
 18e:	00 d0       	rcall	.+0      	; 0x190 <parse_and_set_speeds+0x6>
 190:	00 d0       	rcall	.+0      	; 0x192 <parse_and_set_speeds+0x8>
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
	// Parse the input string for two integers
	int speed1, speed2;
	if (sscanf(input, "%d %d", &speed1, &speed2) == 2) {
 196:	9e 01       	movw	r18, r28
 198:	2d 5f       	subi	r18, 0xFD	; 253
 19a:	3f 4f       	sbci	r19, 0xFF	; 255
 19c:	3f 93       	push	r19
 19e:	2f 93       	push	r18
 1a0:	22 50       	subi	r18, 0x02	; 2
 1a2:	31 09       	sbc	r19, r1
 1a4:	3f 93       	push	r19
 1a6:	2f 93       	push	r18
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	31 e0       	ldi	r19, 0x01	; 1
 1ac:	3f 93       	push	r19
 1ae:	2f 93       	push	r18
 1b0:	9f 93       	push	r25
 1b2:	8f 93       	push	r24
 1b4:	0e 94 65 01 	call	0x2ca	; 0x2ca <sscanf>
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61
 1c2:	02 97       	sbiw	r24, 0x02	; 2
 1c4:	09 f5       	brne	.+66     	; 0x208 <parse_and_set_speeds+0x7e>
		// Print the received PWM values
		uart_print("Received PWM values: ");
 1c6:	86 e0       	ldi	r24, 0x06	; 6
 1c8:	91 e0       	ldi	r25, 0x01	; 1
 1ca:	0e 94 6b 00 	call	0xd6	; 0xd6 <uart_print>
		uart_print_int(speed1);
 1ce:	89 81       	ldd	r24, Y+1	; 0x01
 1d0:	9a 81       	ldd	r25, Y+2	; 0x02
 1d2:	0e 94 78 00 	call	0xf0	; 0xf0 <uart_print_int>
		uart_print(" ");
 1d6:	8a e1       	ldi	r24, 0x1A	; 26
 1d8:	91 e0       	ldi	r25, 0x01	; 1
 1da:	0e 94 6b 00 	call	0xd6	; 0xd6 <uart_print>
		uart_print_int(speed2);
 1de:	8b 81       	ldd	r24, Y+3	; 0x03
 1e0:	9c 81       	ldd	r25, Y+4	; 0x04
 1e2:	0e 94 78 00 	call	0xf0	; 0xf0 <uart_print_int>
		uart_print("\r\n");
 1e6:	88 e3       	ldi	r24, 0x38	; 56
 1e8:	91 e0       	ldi	r25, 0x01	; 1
 1ea:	0e 94 6b 00 	call	0xd6	; 0xd6 <uart_print>

		// Set motor speeds
		set_motor_speed(1, speed1);
 1ee:	69 81       	ldd	r22, Y+1	; 0x01
 1f0:	7a 81       	ldd	r23, Y+2	; 0x02
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 a6 00 	call	0x14c	; 0x14c <set_motor_speed>
		set_motor_speed(2, speed2);
 1fa:	6b 81       	ldd	r22, Y+3	; 0x03
 1fc:	7c 81       	ldd	r23, Y+4	; 0x04
 1fe:	82 e0       	ldi	r24, 0x02	; 2
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	0e 94 a6 00 	call	0x14c	; 0x14c <set_motor_speed>
 206:	04 c0       	rjmp	.+8      	; 0x210 <parse_and_set_speeds+0x86>
		} else {
		uart_print("Error: Invalid input format.\r\n");
 208:	8c e1       	ldi	r24, 0x1C	; 28
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	0e 94 6b 00 	call	0xd6	; 0xd6 <uart_print>
	}
}
 210:	0f 90       	pop	r0
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	08 95       	ret

0000021e <main>:
			OCR0B = -speed; // Set PWM duty cycle
		}
	}
}

int main(void){
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	cd b7       	in	r28, 0x3d	; 61
 224:	de b7       	in	r29, 0x3e	; 62
 226:	64 97       	sbiw	r28, 0x14	; 20
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
	char input[20];
	int inputIndex = 0;
	char receivedChar;

	uart_init(103); // Initialize UART with baud rate 9600
 232:	87 e6       	ldi	r24, 0x67	; 103
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	0e 94 59 00 	call	0xb2	; 0xb2 <uart_init>
	pwm_init(); // Initialize PWM
 23a:	0e 94 95 00 	call	0x12a	; 0x12a <pwm_init>

	sei(); // Enable global interrupts
 23e:	78 94       	sei
	}
}

int main(void){
	char input[20];
	int inputIndex = 0;
 240:	00 e0       	ldi	r16, 0x00	; 0
 242:	10 e0       	ldi	r17, 0x00	; 0

	sei(); // Enable global interrupts

	while(1){
		// Receive characters and build the input string
		receivedChar = uart_receive();
 244:	0e 94 64 00 	call	0xc8	; 0xc8 <uart_receive>
		if (receivedChar == '\n' || receivedChar == '\r') {
 248:	8a 30       	cpi	r24, 0x0A	; 10
 24a:	11 f0       	breq	.+4      	; 0x250 <main+0x32>
 24c:	8d 30       	cpi	r24, 0x0D	; 13
 24e:	71 f4       	brne	.+28     	; 0x26c <main+0x4e>
			input[inputIndex] = '\0'; // Null-terminate the string
 250:	e1 e0       	ldi	r30, 0x01	; 1
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	ec 0f       	add	r30, r28
 256:	fd 1f       	adc	r31, r29
 258:	e0 0f       	add	r30, r16
 25a:	f1 1f       	adc	r31, r17
 25c:	10 82       	st	Z, r1
			parse_and_set_speeds(input); // Parse and set speeds
 25e:	ce 01       	movw	r24, r28
 260:	01 96       	adiw	r24, 0x01	; 1
 262:	0e 94 c5 00 	call	0x18a	; 0x18a <parse_and_set_speeds>
			inputIndex = 0; // Reset input index for next input
 266:	00 e0       	ldi	r16, 0x00	; 0
 268:	10 e0       	ldi	r17, 0x00	; 0
 26a:	ec cf       	rjmp	.-40     	; 0x244 <main+0x26>
			} else {
			input[inputIndex++] = receivedChar; // Add char to input string
 26c:	e1 e0       	ldi	r30, 0x01	; 1
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	ec 0f       	add	r30, r28
 272:	fd 1f       	adc	r31, r29
 274:	e0 0f       	add	r30, r16
 276:	f1 1f       	adc	r31, r17
 278:	80 83       	st	Z, r24
 27a:	0f 5f       	subi	r16, 0xFF	; 255
 27c:	1f 4f       	sbci	r17, 0xFF	; 255
 27e:	e2 cf       	rjmp	.-60     	; 0x244 <main+0x26>

00000280 <__itoa_ncheck>:
 280:	bb 27       	eor	r27, r27
 282:	4a 30       	cpi	r20, 0x0A	; 10
 284:	31 f4       	brne	.+12     	; 0x292 <__itoa_ncheck+0x12>
 286:	99 23       	and	r25, r25
 288:	22 f4       	brpl	.+8      	; 0x292 <__itoa_ncheck+0x12>
 28a:	bd e2       	ldi	r27, 0x2D	; 45
 28c:	90 95       	com	r25
 28e:	81 95       	neg	r24
 290:	9f 4f       	sbci	r25, 0xFF	; 255
 292:	0c 94 4c 01 	jmp	0x298	; 0x298 <__utoa_common>

00000296 <__utoa_ncheck>:
 296:	bb 27       	eor	r27, r27

00000298 <__utoa_common>:
 298:	fb 01       	movw	r30, r22
 29a:	55 27       	eor	r21, r21
 29c:	aa 27       	eor	r26, r26
 29e:	88 0f       	add	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	aa 1f       	adc	r26, r26
 2a4:	a4 17       	cp	r26, r20
 2a6:	10 f0       	brcs	.+4      	; 0x2ac <__utoa_common+0x14>
 2a8:	a4 1b       	sub	r26, r20
 2aa:	83 95       	inc	r24
 2ac:	50 51       	subi	r21, 0x10	; 16
 2ae:	b9 f7       	brne	.-18     	; 0x29e <__utoa_common+0x6>
 2b0:	a0 5d       	subi	r26, 0xD0	; 208
 2b2:	aa 33       	cpi	r26, 0x3A	; 58
 2b4:	08 f0       	brcs	.+2      	; 0x2b8 <__utoa_common+0x20>
 2b6:	a9 5d       	subi	r26, 0xD9	; 217
 2b8:	a1 93       	st	Z+, r26
 2ba:	00 97       	sbiw	r24, 0x00	; 0
 2bc:	79 f7       	brne	.-34     	; 0x29c <__utoa_common+0x4>
 2be:	b1 11       	cpse	r27, r1
 2c0:	b1 93       	st	Z+, r27
 2c2:	11 92       	st	Z+, r1
 2c4:	cb 01       	movw	r24, r22
 2c6:	0c 94 3f 04 	jmp	0x87e	; 0x87e <strrev>

000002ca <sscanf>:
 2ca:	ae e0       	ldi	r26, 0x0E	; 14
 2cc:	b0 e0       	ldi	r27, 0x00	; 0
 2ce:	eb e6       	ldi	r30, 0x6B	; 107
 2d0:	f1 e0       	ldi	r31, 0x01	; 1
 2d2:	0c 94 b9 04 	jmp	0x972	; 0x972 <__prologue_saves__+0x20>
 2d6:	85 e0       	ldi	r24, 0x05	; 5
 2d8:	8c 83       	std	Y+4, r24	; 0x04
 2da:	8b 89       	ldd	r24, Y+19	; 0x13
 2dc:	9c 89       	ldd	r25, Y+20	; 0x14
 2de:	9a 83       	std	Y+2, r25	; 0x02
 2e0:	89 83       	std	Y+1, r24	; 0x01
 2e2:	ae 01       	movw	r20, r28
 2e4:	49 5e       	subi	r20, 0xE9	; 233
 2e6:	5f 4f       	sbci	r21, 0xFF	; 255
 2e8:	6d 89       	ldd	r22, Y+21	; 0x15
 2ea:	7e 89       	ldd	r23, Y+22	; 0x16
 2ec:	ce 01       	movw	r24, r28
 2ee:	01 96       	adiw	r24, 0x01	; 1
 2f0:	0e 94 1a 03 	call	0x634	; 0x634 <vfscanf>
 2f4:	2e 96       	adiw	r28, 0x0e	; 14
 2f6:	e2 e0       	ldi	r30, 0x02	; 2
 2f8:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__epilogue_restores__+0x20>

000002fc <putval>:
 2fc:	20 fd       	sbrc	r18, 0
 2fe:	09 c0       	rjmp	.+18     	; 0x312 <putval+0x16>
 300:	fc 01       	movw	r30, r24
 302:	23 fd       	sbrc	r18, 3
 304:	05 c0       	rjmp	.+10     	; 0x310 <putval+0x14>
 306:	22 ff       	sbrs	r18, 2
 308:	02 c0       	rjmp	.+4      	; 0x30e <putval+0x12>
 30a:	73 83       	std	Z+3, r23	; 0x03
 30c:	62 83       	std	Z+2, r22	; 0x02
 30e:	51 83       	std	Z+1, r21	; 0x01
 310:	40 83       	st	Z, r20
 312:	08 95       	ret

00000314 <mulacc>:
 314:	44 fd       	sbrc	r20, 4
 316:	17 c0       	rjmp	.+46     	; 0x346 <mulacc+0x32>
 318:	46 fd       	sbrc	r20, 6
 31a:	17 c0       	rjmp	.+46     	; 0x34a <mulacc+0x36>
 31c:	ab 01       	movw	r20, r22
 31e:	bc 01       	movw	r22, r24
 320:	da 01       	movw	r26, r20
 322:	fb 01       	movw	r30, r22
 324:	aa 0f       	add	r26, r26
 326:	bb 1f       	adc	r27, r27
 328:	ee 1f       	adc	r30, r30
 32a:	ff 1f       	adc	r31, r31
 32c:	10 94       	com	r1
 32e:	d1 f7       	brne	.-12     	; 0x324 <mulacc+0x10>
 330:	4a 0f       	add	r20, r26
 332:	5b 1f       	adc	r21, r27
 334:	6e 1f       	adc	r22, r30
 336:	7f 1f       	adc	r23, r31
 338:	cb 01       	movw	r24, r22
 33a:	ba 01       	movw	r22, r20
 33c:	66 0f       	add	r22, r22
 33e:	77 1f       	adc	r23, r23
 340:	88 1f       	adc	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	09 c0       	rjmp	.+18     	; 0x358 <mulacc+0x44>
 346:	33 e0       	ldi	r19, 0x03	; 3
 348:	01 c0       	rjmp	.+2      	; 0x34c <mulacc+0x38>
 34a:	34 e0       	ldi	r19, 0x04	; 4
 34c:	66 0f       	add	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	31 50       	subi	r19, 0x01	; 1
 356:	d1 f7       	brne	.-12     	; 0x34c <mulacc+0x38>
 358:	62 0f       	add	r22, r18
 35a:	71 1d       	adc	r23, r1
 35c:	81 1d       	adc	r24, r1
 35e:	91 1d       	adc	r25, r1
 360:	08 95       	ret

00000362 <skip_spaces>:
 362:	0f 93       	push	r16
 364:	1f 93       	push	r17
 366:	cf 93       	push	r28
 368:	df 93       	push	r29
 36a:	8c 01       	movw	r16, r24
 36c:	c8 01       	movw	r24, r16
 36e:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 372:	ec 01       	movw	r28, r24
 374:	97 fd       	sbrc	r25, 7
 376:	08 c0       	rjmp	.+16     	; 0x388 <skip_spaces+0x26>
 378:	0e 94 2b 04 	call	0x856	; 0x856 <isspace>
 37c:	89 2b       	or	r24, r25
 37e:	b1 f7       	brne	.-20     	; 0x36c <skip_spaces+0xa>
 380:	b8 01       	movw	r22, r16
 382:	ce 01       	movw	r24, r28
 384:	0e 94 8d 04 	call	0x91a	; 0x91a <ungetc>
 388:	ce 01       	movw	r24, r28
 38a:	df 91       	pop	r29
 38c:	cf 91       	pop	r28
 38e:	1f 91       	pop	r17
 390:	0f 91       	pop	r16
 392:	08 95       	ret

00000394 <conv_int>:
 394:	8f 92       	push	r8
 396:	9f 92       	push	r9
 398:	af 92       	push	r10
 39a:	bf 92       	push	r11
 39c:	ef 92       	push	r14
 39e:	ff 92       	push	r15
 3a0:	0f 93       	push	r16
 3a2:	1f 93       	push	r17
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	8c 01       	movw	r16, r24
 3aa:	d6 2f       	mov	r29, r22
 3ac:	7a 01       	movw	r14, r20
 3ae:	b2 2e       	mov	r11, r18
 3b0:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 3b4:	9c 01       	movw	r18, r24
 3b6:	33 27       	eor	r19, r19
 3b8:	2b 32       	cpi	r18, 0x2B	; 43
 3ba:	31 05       	cpc	r19, r1
 3bc:	31 f0       	breq	.+12     	; 0x3ca <conv_int+0x36>
 3be:	2d 32       	cpi	r18, 0x2D	; 45
 3c0:	31 05       	cpc	r19, r1
 3c2:	61 f4       	brne	.+24     	; 0x3dc <conv_int+0x48>
 3c4:	8b 2d       	mov	r24, r11
 3c6:	80 68       	ori	r24, 0x80	; 128
 3c8:	b8 2e       	mov	r11, r24
 3ca:	d1 50       	subi	r29, 0x01	; 1
 3cc:	11 f4       	brne	.+4      	; 0x3d2 <conv_int+0x3e>
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	68 c0       	rjmp	.+208    	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 3d2:	c8 01       	movw	r24, r16
 3d4:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 3d8:	97 fd       	sbrc	r25, 7
 3da:	f9 cf       	rjmp	.-14     	; 0x3ce <conv_int+0x3a>
 3dc:	cb 2d       	mov	r28, r11
 3de:	cd 7f       	andi	r28, 0xFD	; 253
 3e0:	2b 2d       	mov	r18, r11
 3e2:	20 73       	andi	r18, 0x30	; 48
 3e4:	09 f5       	brne	.+66     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3e6:	80 33       	cpi	r24, 0x30	; 48
 3e8:	f9 f4       	brne	.+62     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3ea:	aa 24       	eor	r10, r10
 3ec:	aa 94       	dec	r10
 3ee:	ad 0e       	add	r10, r29
 3f0:	09 f4       	brne	.+2      	; 0x3f4 <conv_int+0x60>
 3f2:	43 c0       	rjmp	.+134    	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 3f4:	c8 01       	movw	r24, r16
 3f6:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 3fa:	97 fd       	sbrc	r25, 7
 3fc:	3e c0       	rjmp	.+124    	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 3fe:	9c 01       	movw	r18, r24
 400:	2f 7d       	andi	r18, 0xDF	; 223
 402:	33 27       	eor	r19, r19
 404:	28 35       	cpi	r18, 0x58	; 88
 406:	31 05       	cpc	r19, r1
 408:	49 f4       	brne	.+18     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 40a:	c2 64       	ori	r28, 0x42	; 66
 40c:	d2 50       	subi	r29, 0x02	; 2
 40e:	a9 f1       	breq	.+106    	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 410:	c8 01       	movw	r24, r16
 412:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 416:	97 ff       	sbrs	r25, 7
 418:	07 c0       	rjmp	.+14     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41a:	2f c0       	rjmp	.+94     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 41c:	b6 fe       	sbrs	r11, 6
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 420:	c2 60       	ori	r28, 0x02	; 2
 422:	01 c0       	rjmp	.+2      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 424:	c2 61       	ori	r28, 0x12	; 18
 426:	da 2d       	mov	r29, r10
 428:	81 2c       	mov	r8, r1
 42a:	91 2c       	mov	r9, r1
 42c:	54 01       	movw	r10, r8
 42e:	20 ed       	ldi	r18, 0xD0	; 208
 430:	28 0f       	add	r18, r24
 432:	28 30       	cpi	r18, 0x08	; 8
 434:	80 f0       	brcs	.+32     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 436:	c4 ff       	sbrs	r28, 4
 438:	04 c0       	rjmp	.+8      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 43a:	b8 01       	movw	r22, r16
 43c:	0e 94 8d 04 	call	0x91a	; 0x91a <ungetc>
 440:	19 c0       	rjmp	.+50     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 442:	2a 30       	cpi	r18, 0x0A	; 10
 444:	40 f0       	brcs	.+16     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 446:	c6 ff       	sbrs	r28, 6
 448:	f8 cf       	rjmp	.-16     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 44a:	2f 7d       	andi	r18, 0xDF	; 223
 44c:	3f ee       	ldi	r19, 0xEF	; 239
 44e:	32 0f       	add	r19, r18
 450:	36 30       	cpi	r19, 0x06	; 6
 452:	98 f7       	brcc	.-26     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 454:	27 50       	subi	r18, 0x07	; 7
 456:	4c 2f       	mov	r20, r28
 458:	c5 01       	movw	r24, r10
 45a:	b4 01       	movw	r22, r8
 45c:	0e 94 8a 01 	call	0x314	; 0x314 <mulacc>
 460:	4b 01       	movw	r8, r22
 462:	5c 01       	movw	r10, r24
 464:	c2 60       	ori	r28, 0x02	; 2
 466:	d1 50       	subi	r29, 0x01	; 1
 468:	59 f0       	breq	.+22     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 46a:	c8 01       	movw	r24, r16
 46c:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 470:	97 ff       	sbrs	r25, 7
 472:	dd cf       	rjmp	.-70     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 474:	c1 fd       	sbrc	r28, 1
 476:	04 c0       	rjmp	.+8      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 478:	aa cf       	rjmp	.-172    	; 0x3ce <conv_int+0x3a>
 47a:	81 2c       	mov	r8, r1
 47c:	91 2c       	mov	r9, r1
 47e:	54 01       	movw	r10, r8
 480:	c7 ff       	sbrs	r28, 7
 482:	08 c0       	rjmp	.+16     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 484:	b0 94       	com	r11
 486:	a0 94       	com	r10
 488:	90 94       	com	r9
 48a:	80 94       	com	r8
 48c:	81 1c       	adc	r8, r1
 48e:	91 1c       	adc	r9, r1
 490:	a1 1c       	adc	r10, r1
 492:	b1 1c       	adc	r11, r1
 494:	2c 2f       	mov	r18, r28
 496:	b5 01       	movw	r22, r10
 498:	a4 01       	movw	r20, r8
 49a:	c7 01       	movw	r24, r14
 49c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <putval>
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	df 91       	pop	r29
 4a4:	cf 91       	pop	r28
 4a6:	1f 91       	pop	r17
 4a8:	0f 91       	pop	r16
 4aa:	ff 90       	pop	r15
 4ac:	ef 90       	pop	r14
 4ae:	bf 90       	pop	r11
 4b0:	af 90       	pop	r10
 4b2:	9f 90       	pop	r9
 4b4:	8f 90       	pop	r8
 4b6:	08 95       	ret

000004b8 <conv_brk>:
 4b8:	a0 e2       	ldi	r26, 0x20	; 32
 4ba:	b0 e0       	ldi	r27, 0x00	; 0
 4bc:	e2 e6       	ldi	r30, 0x62	; 98
 4be:	f2 e0       	ldi	r31, 0x02	; 2
 4c0:	0c 94 ac 04 	jmp	0x958	; 0x958 <__prologue_saves__+0x6>
 4c4:	5c 01       	movw	r10, r24
 4c6:	96 2e       	mov	r9, r22
 4c8:	7a 01       	movw	r14, r20
 4ca:	f9 01       	movw	r30, r18
 4cc:	8e 01       	movw	r16, r28
 4ce:	0f 5f       	subi	r16, 0xFF	; 255
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	68 01       	movw	r12, r16
 4d4:	80 e2       	ldi	r24, 0x20	; 32
 4d6:	d8 01       	movw	r26, r16
 4d8:	1d 92       	st	X+, r1
 4da:	8a 95       	dec	r24
 4dc:	e9 f7       	brne	.-6      	; 0x4d8 <conv_brk+0x20>
 4de:	d5 01       	movw	r26, r10
 4e0:	13 96       	adiw	r26, 0x03	; 3
 4e2:	8c 90       	ld	r8, X
 4e4:	80 e0       	ldi	r24, 0x00	; 0
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	61 2c       	mov	r6, r1
 4ea:	71 2c       	mov	r7, r1
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	61 e0       	ldi	r22, 0x01	; 1
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	83 fc       	sbrc	r8, 3
 4f4:	25 91       	lpm	r18, Z+
 4f6:	83 fe       	sbrs	r8, 3
 4f8:	21 91       	ld	r18, Z+
 4fa:	8f 01       	movw	r16, r30
 4fc:	52 2e       	mov	r5, r18
 4fe:	21 11       	cpse	r18, r1
 500:	03 c0       	rjmp	.+6      	; 0x508 <conv_brk+0x50>
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	92 c0       	rjmp	.+292    	; 0x62c <conv_brk+0x174>
 508:	2e 35       	cpi	r18, 0x5E	; 94
 50a:	11 f4       	brne	.+4      	; 0x510 <conv_brk+0x58>
 50c:	00 97       	sbiw	r24, 0x00	; 0
 50e:	51 f1       	breq	.+84     	; 0x564 <conv_brk+0xac>
 510:	43 2f       	mov	r20, r19
 512:	50 e0       	ldi	r21, 0x00	; 0
 514:	48 17       	cp	r20, r24
 516:	59 07       	cpc	r21, r25
 518:	3c f4       	brge	.+14     	; 0x528 <conv_brk+0x70>
 51a:	2d 35       	cpi	r18, 0x5D	; 93
 51c:	59 f1       	breq	.+86     	; 0x574 <conv_brk+0xbc>
 51e:	2d 32       	cpi	r18, 0x2D	; 45
 520:	19 f4       	brne	.+6      	; 0x528 <conv_brk+0x70>
 522:	77 20       	and	r7, r7
 524:	09 f1       	breq	.+66     	; 0x568 <conv_brk+0xb0>
 526:	03 c0       	rjmp	.+6      	; 0x52e <conv_brk+0x76>
 528:	77 20       	and	r7, r7
 52a:	09 f4       	brne	.+2      	; 0x52e <conv_brk+0x76>
 52c:	6a c0       	rjmp	.+212    	; 0x602 <conv_brk+0x14a>
 52e:	45 2d       	mov	r20, r5
 530:	46 95       	lsr	r20
 532:	46 95       	lsr	r20
 534:	46 95       	lsr	r20
 536:	d6 01       	movw	r26, r12
 538:	a4 0f       	add	r26, r20
 53a:	b1 1d       	adc	r27, r1
 53c:	45 2d       	mov	r20, r5
 53e:	47 70       	andi	r20, 0x07	; 7
 540:	8b 01       	movw	r16, r22
 542:	02 c0       	rjmp	.+4      	; 0x548 <conv_brk+0x90>
 544:	00 0f       	add	r16, r16
 546:	11 1f       	adc	r17, r17
 548:	4a 95       	dec	r20
 54a:	e2 f7       	brpl	.-8      	; 0x544 <conv_brk+0x8c>
 54c:	a8 01       	movw	r20, r16
 54e:	5c 91       	ld	r21, X
 550:	45 2b       	or	r20, r21
 552:	4c 93       	st	X, r20
 554:	65 14       	cp	r6, r5
 556:	59 f0       	breq	.+22     	; 0x56e <conv_brk+0xb6>
 558:	56 14       	cp	r5, r6
 55a:	10 f4       	brcc	.+4      	; 0x560 <conv_brk+0xa8>
 55c:	53 94       	inc	r5
 55e:	e7 cf       	rjmp	.-50     	; 0x52e <conv_brk+0x76>
 560:	5a 94       	dec	r5
 562:	e5 cf       	rjmp	.-54     	; 0x52e <conv_brk+0x76>
 564:	31 e0       	ldi	r19, 0x01	; 1
 566:	04 c0       	rjmp	.+8      	; 0x570 <conv_brk+0xb8>
 568:	77 24       	eor	r7, r7
 56a:	73 94       	inc	r7
 56c:	01 c0       	rjmp	.+2      	; 0x570 <conv_brk+0xb8>
 56e:	71 2c       	mov	r7, r1
 570:	01 96       	adiw	r24, 0x01	; 1
 572:	bf cf       	rjmp	.-130    	; 0x4f2 <conv_brk+0x3a>
 574:	77 20       	and	r7, r7
 576:	19 f0       	breq	.+6      	; 0x57e <conv_brk+0xc6>
 578:	8e 81       	ldd	r24, Y+6	; 0x06
 57a:	80 62       	ori	r24, 0x20	; 32
 57c:	8e 83       	std	Y+6, r24	; 0x06
 57e:	31 11       	cpse	r19, r1
 580:	03 c0       	rjmp	.+6      	; 0x588 <conv_brk+0xd0>
 582:	88 24       	eor	r8, r8
 584:	83 94       	inc	r8
 586:	17 c0       	rjmp	.+46     	; 0x5b6 <conv_brk+0xfe>
 588:	f6 01       	movw	r30, r12
 58a:	9e 01       	movw	r18, r28
 58c:	2f 5d       	subi	r18, 0xDF	; 223
 58e:	3f 4f       	sbci	r19, 0xFF	; 255
 590:	80 81       	ld	r24, Z
 592:	80 95       	com	r24
 594:	81 93       	st	Z+, r24
 596:	2e 17       	cp	r18, r30
 598:	3f 07       	cpc	r19, r31
 59a:	d1 f7       	brne	.-12     	; 0x590 <conv_brk+0xd8>
 59c:	f2 cf       	rjmp	.-28     	; 0x582 <conv_brk+0xca>
 59e:	e1 14       	cp	r14, r1
 5a0:	f1 04       	cpc	r15, r1
 5a2:	29 f0       	breq	.+10     	; 0x5ae <conv_brk+0xf6>
 5a4:	d7 01       	movw	r26, r14
 5a6:	8c 93       	st	X, r24
 5a8:	f7 01       	movw	r30, r14
 5aa:	31 96       	adiw	r30, 0x01	; 1
 5ac:	7f 01       	movw	r14, r30
 5ae:	9a 94       	dec	r9
 5b0:	81 2c       	mov	r8, r1
 5b2:	99 20       	and	r9, r9
 5b4:	f9 f0       	breq	.+62     	; 0x5f4 <conv_brk+0x13c>
 5b6:	c5 01       	movw	r24, r10
 5b8:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 5bc:	97 fd       	sbrc	r25, 7
 5be:	18 c0       	rjmp	.+48     	; 0x5f0 <conv_brk+0x138>
 5c0:	fc 01       	movw	r30, r24
 5c2:	ff 27       	eor	r31, r31
 5c4:	23 e0       	ldi	r18, 0x03	; 3
 5c6:	f5 95       	asr	r31
 5c8:	e7 95       	ror	r30
 5ca:	2a 95       	dec	r18
 5cc:	e1 f7       	brne	.-8      	; 0x5c6 <conv_brk+0x10e>
 5ce:	ec 0d       	add	r30, r12
 5d0:	fd 1d       	adc	r31, r13
 5d2:	20 81       	ld	r18, Z
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	ac 01       	movw	r20, r24
 5d8:	47 70       	andi	r20, 0x07	; 7
 5da:	55 27       	eor	r21, r21
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <conv_brk+0x12a>
 5de:	35 95       	asr	r19
 5e0:	27 95       	ror	r18
 5e2:	4a 95       	dec	r20
 5e4:	e2 f7       	brpl	.-8      	; 0x5de <conv_brk+0x126>
 5e6:	20 fd       	sbrc	r18, 0
 5e8:	da cf       	rjmp	.-76     	; 0x59e <conv_brk+0xe6>
 5ea:	b5 01       	movw	r22, r10
 5ec:	0e 94 8d 04 	call	0x91a	; 0x91a <ungetc>
 5f0:	81 10       	cpse	r8, r1
 5f2:	87 cf       	rjmp	.-242    	; 0x502 <conv_brk+0x4a>
 5f4:	e1 14       	cp	r14, r1
 5f6:	f1 04       	cpc	r15, r1
 5f8:	11 f0       	breq	.+4      	; 0x5fe <conv_brk+0x146>
 5fa:	d7 01       	movw	r26, r14
 5fc:	1c 92       	st	X, r1
 5fe:	c8 01       	movw	r24, r16
 600:	15 c0       	rjmp	.+42     	; 0x62c <conv_brk+0x174>
 602:	42 2f       	mov	r20, r18
 604:	46 95       	lsr	r20
 606:	46 95       	lsr	r20
 608:	46 95       	lsr	r20
 60a:	d6 01       	movw	r26, r12
 60c:	a4 0f       	add	r26, r20
 60e:	b1 1d       	adc	r27, r1
 610:	42 2f       	mov	r20, r18
 612:	47 70       	andi	r20, 0x07	; 7
 614:	8b 01       	movw	r16, r22
 616:	02 c0       	rjmp	.+4      	; 0x61c <conv_brk+0x164>
 618:	00 0f       	add	r16, r16
 61a:	11 1f       	adc	r17, r17
 61c:	4a 95       	dec	r20
 61e:	e2 f7       	brpl	.-8      	; 0x618 <conv_brk+0x160>
 620:	a8 01       	movw	r20, r16
 622:	5c 91       	ld	r21, X
 624:	45 2b       	or	r20, r21
 626:	4c 93       	st	X, r20
 628:	62 2e       	mov	r6, r18
 62a:	a2 cf       	rjmp	.-188    	; 0x570 <conv_brk+0xb8>
 62c:	a0 96       	adiw	r28, 0x20	; 32
 62e:	ef e0       	ldi	r30, 0x0F	; 15
 630:	0c 94 c8 04 	jmp	0x990	; 0x990 <__epilogue_restores__+0x6>

00000634 <vfscanf>:
 634:	a0 e0       	ldi	r26, 0x00	; 0
 636:	b0 e0       	ldi	r27, 0x00	; 0
 638:	e0 e2       	ldi	r30, 0x20	; 32
 63a:	f3 e0       	ldi	r31, 0x03	; 3
 63c:	0c 94 ac 04 	jmp	0x958	; 0x958 <__prologue_saves__+0x6>
 640:	6c 01       	movw	r12, r24
 642:	eb 01       	movw	r28, r22
 644:	5a 01       	movw	r10, r20
 646:	fc 01       	movw	r30, r24
 648:	17 82       	std	Z+7, r1	; 0x07
 64a:	16 82       	std	Z+6, r1	; 0x06
 64c:	51 2c       	mov	r5, r1
 64e:	f6 01       	movw	r30, r12
 650:	e3 80       	ldd	r14, Z+3	; 0x03
 652:	fe 01       	movw	r30, r28
 654:	e3 fc       	sbrc	r14, 3
 656:	85 91       	lpm	r24, Z+
 658:	e3 fe       	sbrs	r14, 3
 65a:	81 91       	ld	r24, Z+
 65c:	18 2f       	mov	r17, r24
 65e:	ef 01       	movw	r28, r30
 660:	88 23       	and	r24, r24
 662:	09 f4       	brne	.+2      	; 0x666 <vfscanf+0x32>
 664:	ee c0       	rjmp	.+476    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 2b 04 	call	0x856	; 0x856 <isspace>
 66c:	89 2b       	or	r24, r25
 66e:	21 f0       	breq	.+8      	; 0x678 <vfscanf+0x44>
 670:	c6 01       	movw	r24, r12
 672:	0e 94 b1 01 	call	0x362	; 0x362 <skip_spaces>
 676:	eb cf       	rjmp	.-42     	; 0x64e <vfscanf+0x1a>
 678:	15 32       	cpi	r17, 0x25	; 37
 67a:	41 f4       	brne	.+16     	; 0x68c <vfscanf+0x58>
 67c:	fe 01       	movw	r30, r28
 67e:	e3 fc       	sbrc	r14, 3
 680:	15 91       	lpm	r17, Z+
 682:	e3 fe       	sbrs	r14, 3
 684:	11 91       	ld	r17, Z+
 686:	ef 01       	movw	r28, r30
 688:	15 32       	cpi	r17, 0x25	; 37
 68a:	81 f4       	brne	.+32     	; 0x6ac <vfscanf+0x78>
 68c:	c6 01       	movw	r24, r12
 68e:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 692:	97 fd       	sbrc	r25, 7
 694:	d4 c0       	rjmp	.+424    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 696:	41 2f       	mov	r20, r17
 698:	50 e0       	ldi	r21, 0x00	; 0
 69a:	9c 01       	movw	r18, r24
 69c:	33 27       	eor	r19, r19
 69e:	24 17       	cp	r18, r20
 6a0:	35 07       	cpc	r19, r21
 6a2:	a9 f2       	breq	.-86     	; 0x64e <vfscanf+0x1a>
 6a4:	b6 01       	movw	r22, r12
 6a6:	0e 94 8d 04 	call	0x91a	; 0x91a <ungetc>
 6aa:	cb c0       	rjmp	.+406    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 6ac:	1a 32       	cpi	r17, 0x2A	; 42
 6ae:	39 f4       	brne	.+14     	; 0x6be <vfscanf+0x8a>
 6b0:	e3 fc       	sbrc	r14, 3
 6b2:	15 91       	lpm	r17, Z+
 6b4:	e3 fe       	sbrs	r14, 3
 6b6:	11 91       	ld	r17, Z+
 6b8:	ef 01       	movw	r28, r30
 6ba:	01 e0       	ldi	r16, 0x01	; 1
 6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <vfscanf+0x8c>
 6be:	00 e0       	ldi	r16, 0x00	; 0
 6c0:	f1 2c       	mov	r15, r1
 6c2:	20 ed       	ldi	r18, 0xD0	; 208
 6c4:	21 0f       	add	r18, r17
 6c6:	2a 30       	cpi	r18, 0x0A	; 10
 6c8:	80 f4       	brcc	.+32     	; 0x6ea <vfscanf+0xb6>
 6ca:	02 60       	ori	r16, 0x02	; 2
 6cc:	6f 2d       	mov	r22, r15
 6ce:	70 e0       	ldi	r23, 0x00	; 0
 6d0:	80 e0       	ldi	r24, 0x00	; 0
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	40 e2       	ldi	r20, 0x20	; 32
 6d6:	0e 94 8a 01 	call	0x314	; 0x314 <mulacc>
 6da:	f6 2e       	mov	r15, r22
 6dc:	fe 01       	movw	r30, r28
 6de:	e3 fc       	sbrc	r14, 3
 6e0:	15 91       	lpm	r17, Z+
 6e2:	e3 fe       	sbrs	r14, 3
 6e4:	11 91       	ld	r17, Z+
 6e6:	ef 01       	movw	r28, r30
 6e8:	ec cf       	rjmp	.-40     	; 0x6c2 <vfscanf+0x8e>
 6ea:	01 ff       	sbrs	r16, 1
 6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <vfscanf+0xc0>
 6ee:	f1 10       	cpse	r15, r1
 6f0:	03 c0       	rjmp	.+6      	; 0x6f8 <vfscanf+0xc4>
 6f2:	a7 c0       	rjmp	.+334    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 6f4:	ff 24       	eor	r15, r15
 6f6:	fa 94       	dec	r15
 6f8:	18 36       	cpi	r17, 0x68	; 104
 6fa:	19 f0       	breq	.+6      	; 0x702 <vfscanf+0xce>
 6fc:	1c 36       	cpi	r17, 0x6C	; 108
 6fe:	51 f0       	breq	.+20     	; 0x714 <vfscanf+0xe0>
 700:	10 c0       	rjmp	.+32     	; 0x722 <vfscanf+0xee>
 702:	fe 01       	movw	r30, r28
 704:	e3 fc       	sbrc	r14, 3
 706:	15 91       	lpm	r17, Z+
 708:	e3 fe       	sbrs	r14, 3
 70a:	11 91       	ld	r17, Z+
 70c:	ef 01       	movw	r28, r30
 70e:	18 36       	cpi	r17, 0x68	; 104
 710:	41 f4       	brne	.+16     	; 0x722 <vfscanf+0xee>
 712:	08 60       	ori	r16, 0x08	; 8
 714:	04 60       	ori	r16, 0x04	; 4
 716:	fe 01       	movw	r30, r28
 718:	e3 fc       	sbrc	r14, 3
 71a:	15 91       	lpm	r17, Z+
 71c:	e3 fe       	sbrs	r14, 3
 71e:	11 91       	ld	r17, Z+
 720:	ef 01       	movw	r28, r30
 722:	11 23       	and	r17, r17
 724:	09 f4       	brne	.+2      	; 0x728 <vfscanf+0xf4>
 726:	8d c0       	rjmp	.+282    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 728:	61 2f       	mov	r22, r17
 72a:	70 e0       	ldi	r23, 0x00	; 0
 72c:	88 e6       	ldi	r24, 0x68	; 104
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 34 04 	call	0x868	; 0x868 <strchr_P>
 734:	89 2b       	or	r24, r25
 736:	09 f4       	brne	.+2      	; 0x73a <vfscanf+0x106>
 738:	84 c0       	rjmp	.+264    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 73a:	00 fd       	sbrc	r16, 0
 73c:	07 c0       	rjmp	.+14     	; 0x74c <vfscanf+0x118>
 73e:	f5 01       	movw	r30, r10
 740:	80 80       	ld	r8, Z
 742:	91 80       	ldd	r9, Z+1	; 0x01
 744:	c5 01       	movw	r24, r10
 746:	02 96       	adiw	r24, 0x02	; 2
 748:	5c 01       	movw	r10, r24
 74a:	02 c0       	rjmp	.+4      	; 0x750 <vfscanf+0x11c>
 74c:	81 2c       	mov	r8, r1
 74e:	91 2c       	mov	r9, r1
 750:	1e 36       	cpi	r17, 0x6E	; 110
 752:	51 f4       	brne	.+20     	; 0x768 <vfscanf+0x134>
 754:	f6 01       	movw	r30, r12
 756:	46 81       	ldd	r20, Z+6	; 0x06
 758:	57 81       	ldd	r21, Z+7	; 0x07
 75a:	60 e0       	ldi	r22, 0x00	; 0
 75c:	70 e0       	ldi	r23, 0x00	; 0
 75e:	20 2f       	mov	r18, r16
 760:	c4 01       	movw	r24, r8
 762:	0e 94 7e 01 	call	0x2fc	; 0x2fc <putval>
 766:	73 cf       	rjmp	.-282    	; 0x64e <vfscanf+0x1a>
 768:	13 36       	cpi	r17, 0x63	; 99
 76a:	a9 f4       	brne	.+42     	; 0x796 <vfscanf+0x162>
 76c:	01 fd       	sbrc	r16, 1
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfscanf+0x140>
 770:	ff 24       	eor	r15, r15
 772:	f3 94       	inc	r15
 774:	c6 01       	movw	r24, r12
 776:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 77a:	97 fd       	sbrc	r25, 7
 77c:	60 c0       	rjmp	.+192    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 77e:	81 14       	cp	r8, r1
 780:	91 04       	cpc	r9, r1
 782:	29 f0       	breq	.+10     	; 0x78e <vfscanf+0x15a>
 784:	f4 01       	movw	r30, r8
 786:	80 83       	st	Z, r24
 788:	c4 01       	movw	r24, r8
 78a:	01 96       	adiw	r24, 0x01	; 1
 78c:	4c 01       	movw	r8, r24
 78e:	fa 94       	dec	r15
 790:	f1 10       	cpse	r15, r1
 792:	f0 cf       	rjmp	.-32     	; 0x774 <vfscanf+0x140>
 794:	50 c0       	rjmp	.+160    	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 796:	1b 35       	cpi	r17, 0x5B	; 91
 798:	59 f4       	brne	.+22     	; 0x7b0 <vfscanf+0x17c>
 79a:	9e 01       	movw	r18, r28
 79c:	a4 01       	movw	r20, r8
 79e:	6f 2d       	mov	r22, r15
 7a0:	c6 01       	movw	r24, r12
 7a2:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <conv_brk>
 7a6:	ec 01       	movw	r28, r24
 7a8:	89 2b       	or	r24, r25
 7aa:	09 f0       	breq	.+2      	; 0x7ae <vfscanf+0x17a>
 7ac:	44 c0       	rjmp	.+136    	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 7ae:	3e c0       	rjmp	.+124    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 7b0:	c6 01       	movw	r24, r12
 7b2:	0e 94 b1 01 	call	0x362	; 0x362 <skip_spaces>
 7b6:	97 fd       	sbrc	r25, 7
 7b8:	42 c0       	rjmp	.+132    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7ba:	1f 36       	cpi	r17, 0x6F	; 111
 7bc:	61 f1       	breq	.+88     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7be:	28 f4       	brcc	.+10     	; 0x7ca <vfscanf+0x196>
 7c0:	14 36       	cpi	r17, 0x64	; 100
 7c2:	39 f1       	breq	.+78     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7c4:	19 36       	cpi	r17, 0x69	; 105
 7c6:	51 f1       	breq	.+84     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 7c8:	28 c0       	rjmp	.+80     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7ca:	13 37       	cpi	r17, 0x73	; 115
 7cc:	71 f0       	breq	.+28     	; 0x7ea <vfscanf+0x1b6>
 7ce:	15 37       	cpi	r17, 0x75	; 117
 7d0:	01 f1       	breq	.+64     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7d2:	23 c0       	rjmp	.+70     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7d4:	81 14       	cp	r8, r1
 7d6:	91 04       	cpc	r9, r1
 7d8:	29 f0       	breq	.+10     	; 0x7e4 <vfscanf+0x1b0>
 7da:	f4 01       	movw	r30, r8
 7dc:	60 82       	st	Z, r6
 7de:	c4 01       	movw	r24, r8
 7e0:	01 96       	adiw	r24, 0x01	; 1
 7e2:	4c 01       	movw	r8, r24
 7e4:	fa 94       	dec	r15
 7e6:	ff 20       	and	r15, r15
 7e8:	71 f0       	breq	.+28     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7ea:	c6 01       	movw	r24, r12
 7ec:	0e 94 4f 04 	call	0x89e	; 0x89e <fgetc>
 7f0:	3c 01       	movw	r6, r24
 7f2:	97 fd       	sbrc	r25, 7
 7f4:	08 c0       	rjmp	.+16     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7f6:	0e 94 2b 04 	call	0x856	; 0x856 <isspace>
 7fa:	89 2b       	or	r24, r25
 7fc:	59 f3       	breq	.-42     	; 0x7d4 <vfscanf+0x1a0>
 7fe:	b6 01       	movw	r22, r12
 800:	c3 01       	movw	r24, r6
 802:	0e 94 8d 04 	call	0x91a	; 0x91a <ungetc>
 806:	81 14       	cp	r8, r1
 808:	91 04       	cpc	r9, r1
 80a:	a9 f0       	breq	.+42     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 80c:	f4 01       	movw	r30, r8
 80e:	10 82       	st	Z, r1
 810:	12 c0       	rjmp	.+36     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 812:	00 62       	ori	r16, 0x20	; 32
 814:	03 c0       	rjmp	.+6      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 816:	00 61       	ori	r16, 0x10	; 16
 818:	01 c0       	rjmp	.+2      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 81a:	00 64       	ori	r16, 0x40	; 64
 81c:	20 2f       	mov	r18, r16
 81e:	a4 01       	movw	r20, r8
 820:	6f 2d       	mov	r22, r15
 822:	c6 01       	movw	r24, r12
 824:	0e 94 ca 01 	call	0x394	; 0x394 <conv_int>
 828:	81 11       	cpse	r24, r1
 82a:	05 c0       	rjmp	.+10     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 82c:	f6 01       	movw	r30, r12
 82e:	83 81       	ldd	r24, Z+3	; 0x03
 830:	80 73       	andi	r24, 0x30	; 48
 832:	29 f4       	brne	.+10     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 834:	06 c0       	rjmp	.+12     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 836:	00 fd       	sbrc	r16, 0
 838:	0a cf       	rjmp	.-492    	; 0x64e <vfscanf+0x1a>
 83a:	53 94       	inc	r5
 83c:	08 cf       	rjmp	.-496    	; 0x64e <vfscanf+0x1a>
 83e:	55 20       	and	r5, r5
 840:	19 f0       	breq	.+6      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 842:	85 2d       	mov	r24, r5
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	02 c0       	rjmp	.+4      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 848:	8f ef       	ldi	r24, 0xFF	; 255
 84a:	9f ef       	ldi	r25, 0xFF	; 255
 84c:	cd b7       	in	r28, 0x3d	; 61
 84e:	de b7       	in	r29, 0x3e	; 62
 850:	ef e0       	ldi	r30, 0x0F	; 15
 852:	0c 94 c8 04 	jmp	0x990	; 0x990 <__epilogue_restores__+0x6>

00000856 <isspace>:
 856:	91 11       	cpse	r25, r1
 858:	0c 94 a6 04 	jmp	0x94c	; 0x94c <__ctype_isfalse>
 85c:	80 32       	cpi	r24, 0x20	; 32
 85e:	19 f0       	breq	.+6      	; 0x866 <isspace+0x10>
 860:	89 50       	subi	r24, 0x09	; 9
 862:	85 50       	subi	r24, 0x05	; 5
 864:	c8 f7       	brcc	.-14     	; 0x858 <isspace+0x2>
 866:	08 95       	ret

00000868 <strchr_P>:
 868:	fc 01       	movw	r30, r24
 86a:	05 90       	lpm	r0, Z+
 86c:	06 16       	cp	r0, r22
 86e:	21 f0       	breq	.+8      	; 0x878 <strchr_P+0x10>
 870:	00 20       	and	r0, r0
 872:	d9 f7       	brne	.-10     	; 0x86a <strchr_P+0x2>
 874:	c0 01       	movw	r24, r0
 876:	08 95       	ret
 878:	31 97       	sbiw	r30, 0x01	; 1
 87a:	cf 01       	movw	r24, r30
 87c:	08 95       	ret

0000087e <strrev>:
 87e:	dc 01       	movw	r26, r24
 880:	fc 01       	movw	r30, r24
 882:	67 2f       	mov	r22, r23
 884:	71 91       	ld	r23, Z+
 886:	77 23       	and	r23, r23
 888:	e1 f7       	brne	.-8      	; 0x882 <strrev+0x4>
 88a:	32 97       	sbiw	r30, 0x02	; 2
 88c:	04 c0       	rjmp	.+8      	; 0x896 <strrev+0x18>
 88e:	7c 91       	ld	r23, X
 890:	6d 93       	st	X+, r22
 892:	70 83       	st	Z, r23
 894:	62 91       	ld	r22, -Z
 896:	ae 17       	cp	r26, r30
 898:	bf 07       	cpc	r27, r31
 89a:	c8 f3       	brcs	.-14     	; 0x88e <strrev+0x10>
 89c:	08 95       	ret

0000089e <fgetc>:
 89e:	cf 93       	push	r28
 8a0:	df 93       	push	r29
 8a2:	ec 01       	movw	r28, r24
 8a4:	2b 81       	ldd	r18, Y+3	; 0x03
 8a6:	20 ff       	sbrs	r18, 0
 8a8:	33 c0       	rjmp	.+102    	; 0x910 <__stack+0x11>
 8aa:	26 ff       	sbrs	r18, 6
 8ac:	0a c0       	rjmp	.+20     	; 0x8c2 <fgetc+0x24>
 8ae:	2f 7b       	andi	r18, 0xBF	; 191
 8b0:	2b 83       	std	Y+3, r18	; 0x03
 8b2:	8e 81       	ldd	r24, Y+6	; 0x06
 8b4:	9f 81       	ldd	r25, Y+7	; 0x07
 8b6:	01 96       	adiw	r24, 0x01	; 1
 8b8:	9f 83       	std	Y+7, r25	; 0x07
 8ba:	8e 83       	std	Y+6, r24	; 0x06
 8bc:	8a 81       	ldd	r24, Y+2	; 0x02
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	29 c0       	rjmp	.+82     	; 0x914 <__stack+0x15>
 8c2:	22 ff       	sbrs	r18, 2
 8c4:	0f c0       	rjmp	.+30     	; 0x8e4 <fgetc+0x46>
 8c6:	e8 81       	ld	r30, Y
 8c8:	f9 81       	ldd	r31, Y+1	; 0x01
 8ca:	80 81       	ld	r24, Z
 8cc:	08 2e       	mov	r0, r24
 8ce:	00 0c       	add	r0, r0
 8d0:	99 0b       	sbc	r25, r25
 8d2:	00 97       	sbiw	r24, 0x00	; 0
 8d4:	19 f4       	brne	.+6      	; 0x8dc <fgetc+0x3e>
 8d6:	20 62       	ori	r18, 0x20	; 32
 8d8:	2b 83       	std	Y+3, r18	; 0x03
 8da:	1a c0       	rjmp	.+52     	; 0x910 <__stack+0x11>
 8dc:	31 96       	adiw	r30, 0x01	; 1
 8de:	f9 83       	std	Y+1, r31	; 0x01
 8e0:	e8 83       	st	Y, r30
 8e2:	0e c0       	rjmp	.+28     	; 0x900 <__stack+0x1>
 8e4:	ea 85       	ldd	r30, Y+10	; 0x0a
 8e6:	fb 85       	ldd	r31, Y+11	; 0x0b
 8e8:	09 95       	icall
 8ea:	97 ff       	sbrs	r25, 7
 8ec:	09 c0       	rjmp	.+18     	; 0x900 <__stack+0x1>
 8ee:	2b 81       	ldd	r18, Y+3	; 0x03
 8f0:	01 96       	adiw	r24, 0x01	; 1
 8f2:	11 f0       	breq	.+4      	; 0x8f8 <fgetc+0x5a>
 8f4:	80 e2       	ldi	r24, 0x20	; 32
 8f6:	01 c0       	rjmp	.+2      	; 0x8fa <fgetc+0x5c>
 8f8:	80 e1       	ldi	r24, 0x10	; 16
 8fa:	82 2b       	or	r24, r18
 8fc:	8b 83       	std	Y+3, r24	; 0x03
 8fe:	08 c0       	rjmp	.+16     	; 0x910 <__stack+0x11>
 900:	2e 81       	ldd	r18, Y+6	; 0x06
 902:	3f 81       	ldd	r19, Y+7	; 0x07
 904:	2f 5f       	subi	r18, 0xFF	; 255
 906:	3f 4f       	sbci	r19, 0xFF	; 255
 908:	3f 83       	std	Y+7, r19	; 0x07
 90a:	2e 83       	std	Y+6, r18	; 0x06
 90c:	99 27       	eor	r25, r25
 90e:	02 c0       	rjmp	.+4      	; 0x914 <__stack+0x15>
 910:	8f ef       	ldi	r24, 0xFF	; 255
 912:	9f ef       	ldi	r25, 0xFF	; 255
 914:	df 91       	pop	r29
 916:	cf 91       	pop	r28
 918:	08 95       	ret

0000091a <ungetc>:
 91a:	fb 01       	movw	r30, r22
 91c:	23 81       	ldd	r18, Z+3	; 0x03
 91e:	20 ff       	sbrs	r18, 0
 920:	12 c0       	rjmp	.+36     	; 0x946 <ungetc+0x2c>
 922:	26 fd       	sbrc	r18, 6
 924:	10 c0       	rjmp	.+32     	; 0x946 <ungetc+0x2c>
 926:	8f 3f       	cpi	r24, 0xFF	; 255
 928:	3f ef       	ldi	r19, 0xFF	; 255
 92a:	93 07       	cpc	r25, r19
 92c:	61 f0       	breq	.+24     	; 0x946 <ungetc+0x2c>
 92e:	82 83       	std	Z+2, r24	; 0x02
 930:	2f 7d       	andi	r18, 0xDF	; 223
 932:	20 64       	ori	r18, 0x40	; 64
 934:	23 83       	std	Z+3, r18	; 0x03
 936:	26 81       	ldd	r18, Z+6	; 0x06
 938:	37 81       	ldd	r19, Z+7	; 0x07
 93a:	21 50       	subi	r18, 0x01	; 1
 93c:	31 09       	sbc	r19, r1
 93e:	37 83       	std	Z+7, r19	; 0x07
 940:	26 83       	std	Z+6, r18	; 0x06
 942:	99 27       	eor	r25, r25
 944:	08 95       	ret
 946:	8f ef       	ldi	r24, 0xFF	; 255
 948:	9f ef       	ldi	r25, 0xFF	; 255
 94a:	08 95       	ret

0000094c <__ctype_isfalse>:
 94c:	99 27       	eor	r25, r25
 94e:	88 27       	eor	r24, r24

00000950 <__ctype_istrue>:
 950:	08 95       	ret

00000952 <__prologue_saves__>:
 952:	2f 92       	push	r2
 954:	3f 92       	push	r3
 956:	4f 92       	push	r4
 958:	5f 92       	push	r5
 95a:	6f 92       	push	r6
 95c:	7f 92       	push	r7
 95e:	8f 92       	push	r8
 960:	9f 92       	push	r9
 962:	af 92       	push	r10
 964:	bf 92       	push	r11
 966:	cf 92       	push	r12
 968:	df 92       	push	r13
 96a:	ef 92       	push	r14
 96c:	ff 92       	push	r15
 96e:	0f 93       	push	r16
 970:	1f 93       	push	r17
 972:	cf 93       	push	r28
 974:	df 93       	push	r29
 976:	cd b7       	in	r28, 0x3d	; 61
 978:	de b7       	in	r29, 0x3e	; 62
 97a:	ca 1b       	sub	r28, r26
 97c:	db 0b       	sbc	r29, r27
 97e:	0f b6       	in	r0, 0x3f	; 63
 980:	f8 94       	cli
 982:	de bf       	out	0x3e, r29	; 62
 984:	0f be       	out	0x3f, r0	; 63
 986:	cd bf       	out	0x3d, r28	; 61
 988:	09 94       	ijmp

0000098a <__epilogue_restores__>:
 98a:	2a 88       	ldd	r2, Y+18	; 0x12
 98c:	39 88       	ldd	r3, Y+17	; 0x11
 98e:	48 88       	ldd	r4, Y+16	; 0x10
 990:	5f 84       	ldd	r5, Y+15	; 0x0f
 992:	6e 84       	ldd	r6, Y+14	; 0x0e
 994:	7d 84       	ldd	r7, Y+13	; 0x0d
 996:	8c 84       	ldd	r8, Y+12	; 0x0c
 998:	9b 84       	ldd	r9, Y+11	; 0x0b
 99a:	aa 84       	ldd	r10, Y+10	; 0x0a
 99c:	b9 84       	ldd	r11, Y+9	; 0x09
 99e:	c8 84       	ldd	r12, Y+8	; 0x08
 9a0:	df 80       	ldd	r13, Y+7	; 0x07
 9a2:	ee 80       	ldd	r14, Y+6	; 0x06
 9a4:	fd 80       	ldd	r15, Y+5	; 0x05
 9a6:	0c 81       	ldd	r16, Y+4	; 0x04
 9a8:	1b 81       	ldd	r17, Y+3	; 0x03
 9aa:	aa 81       	ldd	r26, Y+2	; 0x02
 9ac:	b9 81       	ldd	r27, Y+1	; 0x01
 9ae:	ce 0f       	add	r28, r30
 9b0:	d1 1d       	adc	r29, r1
 9b2:	0f b6       	in	r0, 0x3f	; 63
 9b4:	f8 94       	cli
 9b6:	de bf       	out	0x3e, r29	; 62
 9b8:	0f be       	out	0x3f, r0	; 63
 9ba:	cd bf       	out	0x3d, r28	; 61
 9bc:	ed 01       	movw	r28, r26
 9be:	08 95       	ret

000009c0 <_exit>:
 9c0:	f8 94       	cli

000009c2 <__stop_program>:
 9c2:	ff cf       	rjmp	.-2      	; 0x9c2 <__stop_program>
